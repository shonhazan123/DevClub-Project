{"ast":null,"code":"'use strict';\n\nfunction _fakeTimers() {\n  var data = require('@jest/fake-timers');\n\n  _fakeTimers = function _fakeTimers() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _sourceMap() {\n  var data = require('@jest/source-map');\n\n  _sourceMap = function _sourceMap() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _console() {\n  var data = require('@jest/console');\n\n  _console = function _console() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _testResult() {\n  var data = require('@jest/test-result');\n\n  _testResult = function _testResult() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _clearLine = _interopRequireDefault2(require('./clearLine'));\n\nvar _createDirectory = _interopRequireDefault2(require('./createDirectory'));\n\nvar _ErrorWithStack = _interopRequireDefault2(require('./ErrorWithStack'));\n\nvar _getFailedSnapshotTests = _interopRequireDefault2(require('./getFailedSnapshotTests'));\n\nvar _installCommonGlobals = _interopRequireDefault2(require('./installCommonGlobals'));\n\nvar _interopRequireDefault = _interopRequireDefault2(require('./interopRequireDefault'));\n\nvar _isInteractive = _interopRequireDefault2(require('./isInteractive'));\n\nvar _isPromise = _interopRequireDefault2(require('./isPromise'));\n\nvar _setGlobal = _interopRequireDefault2(require('./setGlobal'));\n\nvar _deepCyclicCopy = _interopRequireDefault2(require('./deepCyclicCopy'));\n\nvar _convertDescriptorToString = _interopRequireDefault2(require('./convertDescriptorToString'));\n\nvar specialChars = _interopRequireWildcard(require('./specialChars'));\n\nvar _replacePathSepForGlob = _interopRequireDefault2(require('./replacePathSepForGlob'));\n\nvar _testPathPatternToRegExp = _interopRequireDefault2(require('./testPathPatternToRegExp'));\n\nvar preRunMessage = _interopRequireWildcard(require('./preRunMessage'));\n\nvar _pluralize = _interopRequireDefault2(require('./pluralize'));\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj[\"default\"] = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault2(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// TODO: Remove these exports in the next major\n\n\nmodule.exports = {\n  BufferedConsole: _console().BufferedConsole,\n  Console: _console().CustomConsole,\n  ErrorWithStack: _ErrorWithStack[\"default\"],\n  FakeTimers: _fakeTimers().JestFakeTimers,\n  NullConsole: _console().NullConsole,\n  clearLine: _clearLine[\"default\"],\n  convertDescriptorToString: _convertDescriptorToString[\"default\"],\n  createDirectory: _createDirectory[\"default\"],\n  deepCyclicCopy: _deepCyclicCopy[\"default\"],\n  formatTestResults: _testResult().formatTestResults,\n  getCallsite: _sourceMap().getCallsite,\n  getConsoleOutput: _console().getConsoleOutput,\n  getFailedSnapshotTests: _getFailedSnapshotTests[\"default\"],\n  installCommonGlobals: _installCommonGlobals[\"default\"],\n  interopRequireDefault: _interopRequireDefault[\"default\"],\n  isInteractive: _isInteractive[\"default\"],\n  isPromise: _isPromise[\"default\"],\n  pluralize: _pluralize[\"default\"],\n  preRunMessage: preRunMessage,\n  replacePathSepForGlob: _replacePathSepForGlob[\"default\"],\n  setGlobal: _setGlobal[\"default\"],\n  specialChars: specialChars,\n  testPathPatternToRegExp: _testPathPatternToRegExp[\"default\"]\n};","map":null,"metadata":{},"sourceType":"script"}