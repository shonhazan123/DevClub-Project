{"ast":null,"code":"'use strict';\n\nvar vendors = require('./vendors.json');\n\nvar env = process.env; // Used for testing only\n\nObject.defineProperty(exports, '_vendors', {\n  value: vendors.map(function (v) {\n    return v.constant;\n  })\n});\nexports.name = null;\nexports.isPR = null;\nvendors.forEach(function (vendor) {\n  var envs = Array.isArray(vendor.env) ? vendor.env : [vendor.env];\n  var isCI = envs.every(function (obj) {\n    return checkEnv(obj);\n  });\n  exports[vendor.constant] = isCI;\n\n  if (isCI) {\n    exports.name = vendor.name;\n\n    switch (typeof vendor.pr) {\n      case 'string':\n        // \"pr\": \"CIRRUS_PR\"\n        exports.isPR = !!env[vendor.pr];\n        break;\n\n      case 'object':\n        if ('env' in vendor.pr) {\n          // \"pr\": { \"env\": \"BUILDKITE_PULL_REQUEST\", \"ne\": \"false\" }\n          exports.isPR = vendor.pr.env in env && env[vendor.pr.env] !== vendor.pr.ne;\n        } else if ('any' in vendor.pr) {\n          // \"pr\": { \"any\": [\"ghprbPullId\", \"CHANGE_ID\"] }\n          exports.isPR = vendor.pr.any.some(function (key) {\n            return !!env[key];\n          });\n        } else {\n          // \"pr\": { \"DRONE_BUILD_EVENT\": \"pull_request\" }\n          exports.isPR = checkEnv(vendor.pr);\n        }\n\n        break;\n\n      default:\n        // PR detection not supported for this vendor\n        exports.isPR = null;\n    }\n  }\n});\nexports.isCI = !!(env.CI || // Travis CI, CircleCI, Cirrus CI, Gitlab CI, Appveyor, CodeShip, dsari\nenv.CONTINUOUS_INTEGRATION || // Travis CI, Cirrus CI\nenv.BUILD_NUMBER || // Jenkins, TeamCity\nenv.RUN_ID || // TaskCluster, dsari\nexports.name || false);\n\nfunction checkEnv(obj) {\n  if (typeof obj === 'string') return !!env[obj];\n  return Object.keys(obj).every(function (k) {\n    return env[k] === obj[k];\n  });\n}","map":null,"metadata":{},"sourceType":"script"}