{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _gracefulFs() {\n  var data = _interopRequireDefault(require('graceful-fs'));\n\n  _gracefulFs = function _gracefulFs() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _callsites() {\n  var data = _interopRequireDefault(require('callsites'));\n\n  _callsites = function _callsites() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _sourceMap() {\n  var data = require('source-map');\n\n  _sourceMap = function _sourceMap() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// Copied from https://github.com/rexxars/sourcemap-decorate-callsites/blob/5b9735a156964973a75dc62fd2c7f0c1975458e8/lib/index.js#L113-L158\n\n\nvar addSourceMapConsumer = function addSourceMapConsumer(callsite, consumer) {\n  var getLineNumber = callsite.getLineNumber;\n  var getColumnNumber = callsite.getColumnNumber;\n  var position = null;\n\n  function getPosition() {\n    if (!position) {\n      position = consumer.originalPositionFor({\n        column: getColumnNumber.call(callsite) || -1,\n        line: getLineNumber.call(callsite) || -1\n      });\n    }\n\n    return position;\n  }\n\n  Object.defineProperties(callsite, {\n    getColumnNumber: {\n      value: function value() {\n        return getPosition().column || getColumnNumber.call(callsite);\n      },\n      writable: false\n    },\n    getLineNumber: {\n      value: function value() {\n        return getPosition().line || getLineNumber.call(callsite);\n      },\n      writable: false\n    }\n  });\n};\n\nvar _default = function _default(level, sourceMaps) {\n  var levelAfterThisCall = level + 1;\n  var stack = (0, _callsites()[\"default\"])()[levelAfterThisCall];\n  var sourceMapFileName = sourceMaps && sourceMaps[stack.getFileName() || ''];\n\n  if (sourceMapFileName) {\n    try {\n      var sourceMap = _gracefulFs()[\"default\"].readFileSync(sourceMapFileName, 'utf8'); // @ts-ignore: Not allowed to pass string\n\n\n      addSourceMapConsumer(stack, new (_sourceMap().SourceMapConsumer)(sourceMap));\n    } catch (e) {// ignore\n    }\n  }\n\n  return stack;\n};\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}